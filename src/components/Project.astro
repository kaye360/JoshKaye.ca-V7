---
import Type from './Type.astro';

interface Props  {
    heading: string,
    subheading: string,
    topics?: string,
    demoLink?: string,
    repoLink?: string,
    liveLink?: string,
    image: string
}

const {
    heading, 
    subheading, 
    topics, 
    demoLink, 
    repoLink, 
    liveLink, 
    image
} = Astro.props
---

<div class="max-width overflow-hidden first:border-none border-t-4 border-primary-300">
<div class="grid md:grid-cols-2 md:items-center gap-4 project bg-primary-200 bg-opacity-40 py-16 px-def min-h-screen">
        
    <Type>
        <h3 class="font-semibold text-primary-700">{heading}</h3>
        <span class=" text-primary-700">{subheading}</span>
        
        { topics && <p class=" text-primary-600">{topics}</p> }
        
        <slot />
        
        <div>
            {demoLink && <a href={demoLink}>View Demo</a> }
            {repoLink && <a href={repoLink}>Github Repo</a> }
            {liveLink && <a href={liveLink}>Live Site</a> }
        </div>
    </Type>
    
    <img src={image} alt="Project Screenshot" class="rounded-md drop-shadow-md shadow-primary-300" />

</div>
</div>


<style>

a {
    position : relative;
    display : inline-block;
    padding-inline : 1rem;
    padding-block : 0.5rem;
    margin-right : 1rem;
    font-weight: 600;
    color : hsl( var(--color-secondary-200) );
    transition : color 250ms ease-out;
}

a:hover {
    color : hsl( var(--color-primary-800) );
}

a::before {
    content : '';
    position : absolute;
    inset : 0;
    z-index : -2;
    background-color: hsl( var(--color-primary-800) );
}

a::after {
    content : '';
    position : absolute;
    inset : -1px;
    z-index : -1;
    background-color: hsl( var(--color-secondary-200) );
    clip-path: circle(0.0% at 0 100%);
    animation: none;
}

a:hover::after {
    animation : a-after 250ms ease-out both;
}

@keyframes a-after {
    from {
        clip-path: circle(10% at 0 100%);
    }

    to {
        clip-path: circle(150% at 0 100%);
    }
}





</style>

